{
  "openapi": "3.0.0",
  "info": {
    "description": "Backend with Express, MongoDB and MercadoPago for Computer Store ecommerce.",
    "version": "1.0.0",
    "title": "Computer Store",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8000/",
      "description": "Local server for development"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Categories",
      "description": "Endpoints for category CRUD"
    },
    {
      "name": "Products",
      "description": "Endpoints for product CRUD"
    },
    {
      "name": "Clients",
      "description": "Endpoints for clients CRUD"
    }
  ],
  "paths": {
    "/auth/sign-up": {
      "post": {
        "tags":[
          "Auth"
        ],
        "summary": "User sign up",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User object that will be registered",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User sign up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/userLogged"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500":{
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in":{
      "post": {
        "tags":[
          "Auth"
        ],
        "summary": "User sign in",
        "operationId": "loginUser",
        "requestBody":{
          "description": "User object that will log in",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User sign in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content":{
                      "$ref": "#/components/schemas/userLogged"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Incorrect password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/getAll":{
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "responses": {
          "200":{
            "description": "Categories obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/category"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/create":{
      "post":{
        "tags": [
          "Categories"
        ],
        "summary": "Create a category ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "createCategory",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "requestBody": {
          "description": "Category object that will be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/category"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/getById/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a category by id",
        "operationId": "getCategory",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "description": "Id of the category that will be obtained",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/category"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid category id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/updateById/{categoryId}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update a category by id ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "updateCategory",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "description": "Id of the category that will be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Category object that will be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/category"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/deleteById/{categoryId}": {
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a category by id ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "deleteCategory",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "description": "Id of the category that will be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "categoryId": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/uploadPhoto/{categoryId}":{
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Upload a photo for a category ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "uploadPhoto",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "description": "Id of the category that will received the photo",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "description": "Image to upload ( max size: 5 MB )",
          "required": true,
          "content": {
            "multipart/form-data":{
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/category"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Invalid Image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/getAll": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "Products obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "array",
                      "items":{
                        "$ref": "#/components/schemas/product"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/getLatest": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products ordered by date",
        "operationId": "getProductsOrderedByDate",
        "responses": {
          "200": {
            "description": "Products obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "array",
                      "items":{
                        "$ref": "#/components/schemas/product"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/getOffers": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get offer products",
        "operationId": "getOfferProducts",
        "responses": {
          "200": {
            "description": "Products obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "array",
                      "items":{
                        "$ref": "#/components/schemas/product"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/create": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a product ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "createProduct",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "requestBody": {
          "description": "Product object that will be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/product"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/getById/{productId}":{
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by id",
        "operationId": "getProduct",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "Id of the product that will be obtained",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product obtained successfully",
            "content":{
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/product"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid product id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/getByCategoryId/{categoryId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products by category id",
        "operationId": "getProductByCategoryId",
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "description": "Category id of the products that will be obtained",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/product"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid  category id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Id of a non-existent Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/updateById/{productId}": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product by id ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "updateProduct",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "Id of the product that will be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Product object that will be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/product"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/deleteById/{productId}":{
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product by id ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "deleteProduct",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "Id of the product that will be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/uploadPhoto/{productId}":{
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Upload a photo for a product ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "uploadPhotoProduct",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "Id of the product that will received the photo",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "description": "Image to upload ( max size: 5 MB )",
          "required": true,
          "content": {
            "multipart/form-data":{
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/product"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Invalid Image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/uploadSlides/{productId}":{
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Upload slides for a product ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "uploadSlidesProduct",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "Id of the product that will received the slides",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "description": "Object with the slides ( max size: 5 MB ) and an stringify array of images to delete. Use JSON.stringify to get the array",
          "required": true,
          "content": {
            "multipart/form-data":{
              "schema": {
                "type": "object",
                "required": [
                  "image",
                  "imagesToDelete"
                ],
                "properties": {
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "imagesToDelete": {
                    "type": "string",
                    "format": "stringify array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slides uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/product"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Invalid slides",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/getAll": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get all clients ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "getClients",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Clients obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/getById/{clientId}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get client by id ( only account owner or admin )",
        "description": "A token is needed to validate that the request is made by the account owner or an admin",
        "operationId": "getClientById",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "description": "Id of the client that will be obtained",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/user"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/updateById/{clientId}":{
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Update client by id ( only account owner or admin )",
        "description": "A token is needed to validate that the request is made by the account owner or an admin",
        "operationId": "updateClientById",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "description": "Id of the client that will be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Client object that will be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/user"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/deleteById/{clientId}": {
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete client by id ( only account owner or admin )",
        "description": "A token is needed to validate that the request is made by the account owner or an admin",
        "operationId": "deleteClientById",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "description": "Id of the client that will be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/uploadAvatar/{clientId}": {
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Upload an avatar for a client ( only account owner or admin )",
        "description": "A token is needed to validate that the request is made by the account owner or an admin",
        "operationId": "uploadAvatarClient",
        "security": [
          {
            "JsonWebToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "description": "Id of the client that will received the avatar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "description": "Image to upload ( max size: 5 MB )",
          "required": true,
          "content": {
            "multipart/form-data":{
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "content": {
                      "$ref": "#/components/schemas/user"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Invalid Image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "JsonWebToken":{
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "img": {
            "type": "string",
            "format": "url"
          },
          "officialInformation": {
            "type": "string",
            "format": "url"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "discount": {
            "type": "number",
            "format": "int32"
          },
          "stock": {
            "type": "number",
            "format": "int32"
          },
          "slides": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "postProduct":{
        "type": "object",
        "required": [
          "categoryId",
          "name",
          "description",
          "officialInformation",
          "price",
          "stock",
          "details"
        ],
        "properties": {
          "categoryId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "officialInformation": {
            "type": "string",
            "format": "url"
          },
          "price": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "discount": {
            "type": "number",
            "format": "int32",
            "minimum": 0,
            "maximum": 100
          },
          "stock": {
            "type": "number",
            "format": "int32",
            "minimum": 1
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "img": {
            "type": "string",
            "format": "url"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "postCategory": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "url"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["client","admin"],
            "default": "user"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "postUser": {
        "type": "object",
        "required": [
          "name",
          "lastName",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "userLogged": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string",
            "format": "json web token"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "url"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["client","admin"],
            "default": "user"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "registerObject": {
        "type": "object",
        "required": ["name","lastName","email","password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "loginObject": {
        "type": "object",
        "required": ["email","password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "content": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}