{
  "swagger": "2.0",
  "info": {
    "description": "Backend with express, mongodb and mercadopago for Computer Store ecommerce.",
    "version": "1.0.0",
    "title": "Computer Store",
    "contact": {
      "email": "example@computerstore.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "http://localhost:8000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Categories",
      "description": "Endpoints for category CRUD"
    }
  ],
  "paths": {
    "/auth/sign-up": {
      "post": {
        "tags":[
          "Auth"
        ],
        "summary": "User sign up",
        "operationId": "registerUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be register",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registerObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User sign up successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "content": {
                  "$ref": "#/definitions/userLogged"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500":{
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/auth/sign-in":{
      "post": {
        "tags":[
          "Auth"
        ],
        "summary": "User sign in",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to log in",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User sign in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "content":{
                  "$ref": "#/definitions/userLogged"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Incorrect password",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "User does not exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/categories/getAll":{
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "operationId": "getCategories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200":{
            "description": "Categories obtained successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "content": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/category"
                  }
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/categories/create":{
      "post":{
        "tags": [
          "Categories"
        ],
        "summary": "Create a category ( only admin )",
        "description": "A token is needed to validate that the request is made by an administrator",
        "operationId": "createCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that will be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postCategory"
            }
          },
          {
            "in": "header",
            "name": "x-access-token",
            "description": "Json web token",
            "required": "true",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "content": {
                  "$ref": "#/definitions/category"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/categories/getById/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a category by id",
        "operationId": "getCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "description": "Id of the category that will be obtained",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Category obtained successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": true
                },
                "content": {
                  "$ref": "#/definitions/category"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "category": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "img": {
          "type": "string",
          "format": "url"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "postCategory": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "userLogged": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "format": "uuid"
        },
        "token": {
          "type": "string",
          "format": "json web token"
        },
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "avatar": {
          "type": "string",
          "format": "url"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "role": {
          "type": "string",
          "enum": ["client","admin"],
          "default": "user"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "registerObject": {
      "type": "object",
      "required": ["name","lastName","email","password"],
      "properties": {
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "loginObject": {
      "type": "object",
      "required": ["email","password"],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "default": false
        },
        "content": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}